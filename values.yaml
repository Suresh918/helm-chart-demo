# Default values for helm-chart-demo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

container:
  env:
    - name: JAVA_TOOL_OPTIONS
      value: -Xmx1500m
# Added from the mychange project
#container:
  #  env:
  # - name: JAVA_TOOL_OPTIONS
  #   value: -Xmx1500m
  # - name: SPRING_PROFILES_ACTIVE
  #   valueFrom:
  #     configMapKeyRef:
  #       name: mychange
  #       key: environment
  # - name: SPRING_DATASOURCE_USERNAME
  #   valueFrom:
  #     secretKeyRef:
  #       name: mychange-review-service
  #       key: spring.datasource.username
  # - name: SPRING_DATASOURCE_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: mychange-review-service
  #       key: spring.datasource.password
  # - name: SPRING_DATASOURCE_URL
  #   valueFrom:
  #     secretKeyRef:
  #       name: mychange-review-service
  #       key: spring.datasource.url
  # - name: SPRING_REDIS_HOST
  #   value: mychange-review-service-redis-master
  # - name: SPRING_REDIS_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: mychange-review-service-redis
  #       key: password
  # - name: COM_ASML_MIRAI_MYCHANGE_LIBRARIES_COMMON_MESSAGE_JMS_USERNAME
  #   valueFrom:
  #     secretKeyRef:
  #       name: mychange-ems
  #       key: java.messaging.provider.username
  # - name: COM_ASML_MIRAI_MYCHANGE_LIBRARIES_COMMON_MESSAGE_JMS_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: mychange-ems
  #       key: java.messaging.provider.password
  # - name: COM_ASML_MIRAI_MYCHANGE_LIBRARIES_COMMON_MESSAGE_JMS_PROVIDERURL
  #   valueFrom:
  #     secretKeyRef:
  #       name: mychange-ems
#       key: java.messaging.provider.url

#initContainers:
  #- name: init-mychange-review-service-redis-master
  #  image: artifactory-iwf.asml.com/bpi-docker/redis
  # env:
  #   - name: REDIS_PASSWORD
  #     valueFrom:
  #       secretKeyRef:
  #         name: mychange-review-service-redis
  #         key: password
  # command: ['sh', '-c', "until redis-cli -a $REDIS_PASSWORD --no-auth-warning -h mychange-review-service-redis-master ping; do echo waiting for redis; sleep 2; done;"]
